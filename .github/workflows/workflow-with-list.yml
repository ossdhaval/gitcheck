name: workflow with list
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  job-1:
    name: job-1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: print all
        env:
          JVM_PROJECTS: |
            mod1
            mod2
        run: |
          pwd
          for module in $JVM_PROJECTS
           do
             echo "Generating javadocs for module: $module and all it's sub-modules"
             mvn -f $module/pom.xml javadoc:javadoc
          
             echo "Move generated javadocs from all sub-modules to respective doc site location"
          
             echo "getting all sub-module names"
             #readarray -d '' generated-doc-paths < <(find mod1 -type d  -path '*/target/site/apidocs' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||')
             generated_doc_paths=( $( find $module -type d  -path '*/target/site/apidocs' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||'))
             #find mod1 -type d  -path '*/target/site/apidocs' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||' | sed -r 's|/[^/]+$||'
          
             echo "Loop through sub-modules and move javadocs"
             for source_path in "${generated_doc_paths[@]}"
             do
               # check if the directory `docs/admin/reference/javadocs/$module/$sub_module` exists, if not then create one
               mkdir -p docs/admin/reference/javadocs/$source_path
               echo "copy javadocs for $source_path"
               cp -rv ./$source_path/target/site/apidocs/* ./docs/admin/reference/javadocs/$source_path/
               ls ./docs/admin/reference/javadocs/$source_path/
             done
           done
          
          # mvn compile
